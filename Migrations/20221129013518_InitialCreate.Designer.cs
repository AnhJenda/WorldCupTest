// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldCup.Data;

#nullable disable

namespace WorldCup.Migrations
{
    [DbContext(typeof(WorldCupContext))]
    [Migration("20221129013518_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorldCup.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Team1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flag1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("flag2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("passing1")
                        .HasColumnType("int");

                    b.Property<int>("passing2")
                        .HasColumnType("int");

                    b.Property<double>("position1")
                        .HasColumnType("float");

                    b.Property<double>("position2")
                        .HasColumnType("float");

                    b.Property<int>("redCard1")
                        .HasColumnType("int");

                    b.Property<int>("redCard2")
                        .HasColumnType("int");

                    b.Property<int>("score1")
                        .HasColumnType("int");

                    b.Property<int>("score2")
                        .HasColumnType("int");

                    b.Property<int>("shootOnTarget1")
                        .HasColumnType("int");

                    b.Property<int>("shootOnTarget2")
                        .HasColumnType("int");

                    b.Property<int>("yellowCard1")
                        .HasColumnType("int");

                    b.Property<int>("yellowCard2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Match");
                });
#pragma warning restore 612, 618
        }
    }
}
